{"version":3,"sources":["types/store/AuthStore.tsx","store/reducers/authReducer.tsx","components/auth/LoginForm.tsx","types/store/NotesStore.tsx","store/actions/authActions.tsx","components/common/ConfirmationDialog.tsx","store/reducers/notesReducer.tsx","components/notes/NoteShort.tsx","store/actions/notesActions.tsx","components/notes/NoteList.tsx","components/notes/Bullet.tsx","components/notes/Note.tsx","App.tsx","theme.tsx","store/reducers/index.tsx","store/store.tsx","index.tsx"],"names":["EAuthActions","initialState","token","identifier","authReducer","state","action","type","AUTHENTICATE","payload","ENotesActions","LoginForm","props","email","password","handleChange","bind","submitForm","e","currentTarget","id","this","setState","value","authenticateAction","history","push","classes","Box","display","alignItems","justifyContent","flexDirection","className","root","form","TextField","label","textField","onChange","Button","color","variant","button","onClick","Component","mapState","mapDispatch","creds","console","log","connect","withStyles","theme","minHeight","fontSize","flexWrap","boxShadow","margin","spacing","width","marginTop","marginLeft","marginRight","marginBottom","ConfirmationDialog","isOpen","title","description","acceptButtonText","cancelButtonText","closeModal","React","useState","open","setOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","useEffect","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","notesShortList","currentNote","curHighLevelBullets","GET_NOTES_SHORT_LIST","GET_PARTICULAR_NOTE","note","highelevelBullets","CHANGE_BULLET_STATUS","REMOVE_BULLET","Array","isArray","bullets","length","bulletKey","Object","keys","CLEAN_PARTICULAR_NOTE","REMOVE_NOTE","notesList","SAVE_NOTE","Note","confirmDialog","isAccepted","removeNote","px","to","pathname","IconButton","buttonActions","size","component","Edit","openRemoveConfirmationDialog","Delete","notesReducer","paddingLeft","NoteList","getNotesList","notes","p","buttonAdd","aria-label","addNote","Add","GridList","cellHeight","list","cols","map","key","index","GridListTile","NoteShort","padding","useStyles","makeStyles","createStyles","changeBullet","bullet","removeBullet","Bullet","curBullet","isEditBullet","setEdit","bulletName","setBulletName","actionButtons","saveChangedBullet","Check","Close","addBullet","getBulletLabel","event","target","renderCheckBox","FormControlLabel","control","Checkbox","icon","FavoriteBorder","checkedIcon","Favorite","checked","isChecked","name","pl","getNote","match","params","cleanNote","goBack","ArrowBack","saveNote","Save","shortNote","highlevel","filter","el","fullNote","textAlign","App","path","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","combineReducers","auth","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logger","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.daa54004.chunk.js","sourcesContent":["export interface IAuthStore {\n  token: string;\n  identifier: string;\n}\n\nexport enum EAuthActions {\n  AUTHENTICATE = 'AUTHENTICATE',\n}","import {\n  IAuthStore,\n  EAuthActions,\n} from '../../types/store/AuthStore';\n\nconst initialState: IAuthStore = {\n  token: '',\n  identifier: '',\n};\n\nconst authReducer = (state = initialState, action: any): IAuthStore => {\n  switch (action.type) {\n    case EAuthActions.AUTHENTICATE:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import React, { Component } from 'react';\nimport './LoginForm.css';\nimport { Box, Button, TextField, Theme, withStyles } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport authReducer from '../../store/reducers/authReducer';\nimport { authenticateAction } from '../../store/actions/authActions';\nimport { StylesDictionary } from '../../types';\n\nconst useStyles = (theme: Theme): StylesDictionary => ({\n  root: {\n    minHeight: '100vh',\n    fontSize: 'calc(10px + 2vmin)',\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    boxShadow: '0 0 10px rgba(0,0,0,0.5)',\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: '15ch',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n});\n\ninterface LoginFormProps {\n  classes: Record<string, string>,\n  history: any,\n  authenticateAction?: any,\n}\n\ninterface LoginFormState {\n  email: string,\n  password: string,\n}\n\nclass LoginForm extends Component<LoginFormProps, LoginFormState> {\n  state = {\n    email: '',\n    password: ''\n  };\n\n  constructor(props: LoginFormProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  handleChange(e: any) {\n    e.currentTarget.id === 'email' ?\n      this.setState({ email: e.currentTarget.value }) :\n      this.setState({ password: e.currentTarget.value });\n  }\n\n  submitForm(e: any) {\n    const { email, password } = this.state;\n    this.props.authenticateAction({ email, password });\n    this.props.history.push('/kids-games/notes')\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\" className={classes.root}>\n        <div className={classes.form}>\n          <form className=\"form\">\n            <TextField\n              id=\"email\"\n              label=\"Login\"\n              type=\"email\"\n              className={classes.textField}\n              onChange={this.handleChange}\n            />\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              className={classes.textField}\n              onChange={this.handleChange}\n            />\n\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.button}\n              onClick={this.submitForm}\n            >\n              Login\n            </Button>\n          </form>\n        </div>\n      </Box>\n    );\n  }\n}\n\nconst mapState = authReducer;\n\nconst mapDispatch = {\n  authenticateAction\n}\n\nexport default connect(mapState, mapDispatch)(withStyles(useStyles)(LoginForm));","import { IShortNote, INote } from '../INotes';\n\nexport interface IShortNoteList {\n  [key: string]: IShortNote\n}\n\nexport interface INotesStore {\n  notesShortList: IShortNoteList;\n  curHighLevelBullets: string[] | null;\n  currentNote: INote | null\n}\n\nexport enum ENotesActions {\n  GET_NOTES_SHORT_LIST = 'GET_NOTES_SHORT_LIST',\n  GET_PARTICULAR_NOTE = 'GET_PARTICULAR_NOTE',\n  CHANGE_BULLET_STATUS = 'CHANGE_BULLET_STATUS',\n  REMOVE_BULLET = 'REMOVE_BULLET',\n  CLEAN_PARTICULAR_NOTE = 'CLEAN_PARTICULAR_NOTE',\n  SAVE_NOTE = 'SAVE_NOTE',\n  REMOVE_NOTE = 'REMOVE_NOTE',\n}\n","import { EAuthActions } from '../../types/store/AuthStore';\n\nexport function authenticateAction(creds: { email: string, password: string }) {\n  console.log('>>>>>>>>> auth call with creds email: ', creds.email, ', pass: ', creds.password);\n  return {\n    type: EAuthActions.AUTHENTICATE,\n    payload: {\n      token: 'KK2123KssdfKK',\n      identifier: creds.email,\n    }\n  };\n}\n","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, useMediaQuery, useTheme } from '@material-ui/core';\n\ninterface ResponsiveDialogProps {\n  isOpen: boolean;\n  title: string;\n  description?: string;\n  acceptButtonText: string;\n  cancelButtonText: string;\n  closeModal: (e: any) => void;\n}\n\nexport default function ConfirmationDialog({\n  isOpen,\n  title,\n  description,\n  acceptButtonText,\n  cancelButtonText,\n  closeModal\n}: ResponsiveDialogProps) {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(() => {\n    if (isOpen) {\n      handleOpen();\n    } else {\n      handleClose();\n    }\n  }, [isOpen]);\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      open={open}\n      onClose={() => closeModal(false)}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">{title}</DialogTitle>\n      {\n        description ? <DialogContent>\n          <DialogContentText>\n            {description}\n          </DialogContentText>\n        </DialogContent> : null\n      }\n      <DialogActions>\n        <Button autoFocus onClick={() => closeModal(true)} color=\"primary\">\n          {acceptButtonText}\n        </Button>\n        <Button onClick={() => closeModal(false)} color=\"primary\" autoFocus>\n          {cancelButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import {\n  INotesStore,\n  ENotesActions,\n} from '../../types/store';\n\nconst initialState: INotesStore = {\n  notesShortList: {},\n  currentNote: null,\n  curHighLevelBullets: null,\n};\n\nconst authReducer = (state = initialState, action: any): INotesStore => {\n  switch (action.type) {\n    case ENotesActions.GET_NOTES_SHORT_LIST:\n      return {\n        ...state,\n        notesShortList: action.payload,\n      };\n    case ENotesActions.GET_PARTICULAR_NOTE:\n      return {\n        ...state,\n        currentNote: action.payload.note,\n        curHighLevelBullets: action.payload.highelevelBullets,\n      };\n    case ENotesActions.CHANGE_BULLET_STATUS:\n      return {\n        ...state,\n        currentNote: {\n          ...state.currentNote,\n          [action.payload.id]: action.payload,\n        },\n      };\n    case ENotesActions.REMOVE_BULLET:\n      const note = state.currentNote ? state.currentNote : {};\n      if (Array.isArray(action.payload.bullets) && action.payload.bullets.length) {\n        for (const bulletKey of action.payload.bullets) {\n          delete note[bulletKey];\n        }\n      }\n      delete note[action.payload.id];\n\n      return {\n        ...state,\n        currentNote: Object.keys(note).length ? note : null,\n      };\n    case ENotesActions.CLEAN_PARTICULAR_NOTE:\n      return {\n        ...state,\n        currentNote: null,\n        curHighLevelBullets: null,\n      };\n    case ENotesActions.REMOVE_NOTE:\n      const notesList = { ...state.notesShortList };\n      delete notesList[action.payload?.id];\n      return {\n        ...state,\n        notesShortList: notesList,\n      };\n    case ENotesActions.SAVE_NOTE:\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import React, { Component } from 'react';\nimport { Box, IconButton, Theme, withStyles } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { IShortNote, StylesDictionary } from '../../types';\nimport { Delete, Edit } from '@material-ui/icons';\nimport ConfirmationDialog from '../common/ConfirmationDialog';\nimport { removeNote } from '../../store/actions/notesActions';\nimport notesReducer from '../../store/reducers/notesReducer';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = (theme: Theme): StylesDictionary => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    paddingLeft: '10px',\n  },\n  buttonActions: {\n    width: '28px',\n  },\n});\n\ninterface NoteProps {\n  classes: Record<string, string>,\n  note: IShortNote,\n  removeNote: Function,\n}\n\ninterface NoteState {\n  confirmDialog: boolean,\n}\n\nclass Note extends Component<NoteProps, NoteState> {\n  state = {\n    confirmDialog: false,\n  };\n\n  constructor(props: NoteProps) {\n    super(props);\n  }\n\n  closeModal(isAccepted: boolean) {\n    if (isAccepted) {\n      this.props.removeNote(this.props.note);\n    }\n\n    this.setState({\n      confirmDialog: false,\n    });\n  }\n\n  openRemoveConfirmationDialog(note: IShortNote) {\n    this.setState({\n      confirmDialog: true,\n    });\n  }\n\n  render() {\n    const { classes, note } = this.props;\n    return [\n      <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"wrap\" justifyContent=\"space-between\" px={2}>\n        <p>{note.id}</p>\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n          <Link\n            to={{\n              pathname: `/kids-games/note/${note.id}`,\n            }}\n          >\n            <IconButton\n              className={classes.buttonActions}\n              size=\"small\"\n              component=\"span\"\n            >\n              <Edit fontSize=\"small\" />\n            </IconButton>\n          </Link>\n          <IconButton\n            className={classes.buttonActions}\n            size=\"small\"\n            component=\"span\"\n            onClick={() => this.openRemoveConfirmationDialog(note)}\n          >\n            <Delete fontSize=\"small\" />\n          </IconButton>\n        </Box>\n      </Box>,\n\n      <ConfirmationDialog\n        isOpen={this.state.confirmDialog}\n        title=\"Are you sure you want to remove this?\"\n        acceptButtonText=\"Yes\"\n        cancelButtonText=\"No\"\n        closeModal={this.closeModal.bind(this)}\n      />];\n  }\n}\n\nconst mapState = notesReducer;\n\nconst mapDispatch = {\n  removeNote: removeNote,\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(useStyles)(Note));\n","import { IBullet, INote, IShortNote } from '../../types';\nimport { ENotesActions } from '../../types/store';\n\nexport function getNotesList() {\n  console.log('>>>>>>>>>> get notes list api call ');\n  const notes = {\n    '1': {\n      id: '1',\n    },\n    '2': {\n      id: '2',\n    },\n    '3': {\n      id: '3',\n    },\n    '4': {\n      id: '4',\n    },\n  };\n  return {\n    type: ENotesActions.GET_NOTES_SHORT_LIST,\n    payload: notes,\n  };\n}\n\nexport function removeNote(note: IShortNote | INote) {\n  console.log('>>>>>>>>>> remove note api call', note)\n  return {\n    type: ENotesActions.REMOVE_NOTE,\n    payload: note,\n  };\n}\n\nexport function getParticularNote(shortNote: IShortNote) {\n  console.log('>>>>>>>>> get the full note with bullets by note id', shortNote);\n\n  const note: INote = {\n    '11': {\n      id: '11',\n      isChecked: false,\n      label: 'Test 1',\n      highlevel: true,\n      bullets: ['12', '13', '15'],\n    },\n    '12': {\n      id: '12',\n      isChecked: true,\n      label: 'Test 2',\n    },\n    '13': {\n      id: '13',\n      isChecked: false,\n      label: 'Test 3',\n      bullets: [],\n    },\n    '14': {\n      id: '14',\n      isChecked: true,\n      highlevel: true,\n      label: 'Test 4'\n    },\n    '15': {\n      id: '15',\n      isChecked: false,\n      label: 'Test 5',\n      bullets: ['16']\n    },\n    '16': {\n      id: '16',\n      isChecked: true,\n      label: 'Test 6',\n    }\n  };\n\n  const highelevelBullets = Object.keys(note).map((key) => (note[key].highlevel ? key : null)).filter((el) => el != null);\n  const fullNote = {\n    note,\n    highelevelBullets,\n  };\n\n  return {\n    type: ENotesActions.GET_PARTICULAR_NOTE,\n    payload: fullNote,\n  };\n}\n\nexport function changeBullet(bullet: IBullet) {\n  return {\n    type: ENotesActions.CHANGE_BULLET_STATUS,\n    payload: bullet,\n  };\n}\n\nexport function removeBullet(bullet: IBullet) {\n  return {\n    type: ENotesActions.REMOVE_BULLET,\n    payload: bullet,\n  }\n}\n\nexport function saveNote(note: INote) {\n  console.log('>>>>>>>>>> save note api call ', note);\n\n  return {\n    type: ENotesActions.SAVE_NOTE,\n  };\n}\n\nexport function cleanParticularNote() {\n  return {\n    type: ENotesActions.CLEAN_PARTICULAR_NOTE,\n  };\n}\n","import React, { Component } from 'react';\nimport { Box, GridList, GridListTile, IconButton, Theme, withStyles } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { INotesStore, IShortNote, StylesDictionary } from '../../types';\nimport './NoteList.css';\nimport NoteShort from './NoteShort';\nimport { Add } from '@material-ui/icons';\nimport notesReducer from '../../store/reducers/notesReducer';\nimport { getNotesList, removeNote } from '../../store/actions/notesActions';\n\nconst useStyles = (theme: Theme): StylesDictionary => ({\n  list: {\n    width: '50%',\n    padding: '10px',\n  },\n  buttonAdd: {\n    width: '32px',\n  },\n});\n\ninterface NoteListProps {\n  classes: Record<string, string>,\n  notes: INotesStore\n  getNotesList: Function,\n}\n\ninterface NoteListState { }\n\nclass NoteList extends Component<NoteListProps, NoteListState> {\n  constructor(props: NoteListProps) {\n    super(props);\n    this.props.getNotesList();\n  }\n\n  addNote() {\n    console.log('>>>>>>>>>>>>. clicked add note ', this.props.notes.notesShortList);\n  }\n\n  render() {\n    const { classes, notes } = this.props;\n    const notesList = notes.notesShortList;\n\n    return (\n      <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\" p={10}>\n        <IconButton\n          className={classes.buttonAdd}\n          aria-label=\"upload picture\"\n          size=\"small\"\n          component=\"span\"\n          onClick={() => this.addNote()}\n        >\n          <Add />\n        </IconButton>\n\n        <GridList cellHeight={50} className={classes.list} cols={1}>\n          {Object.keys(notesList).map((key, index) => (\n            <GridListTile key={key + index} className=\"tile\">\n              <NoteShort note={notesList[key]} />\n            </GridListTile>\n          ))}\n        </GridList>\n      </Box>\n    );\n  }\n}\n\nconst mapState = notesReducer;\n\nconst mapDispatch = {\n  getNotesList: getNotesList,\n}\n\nexport default connect(mapState, mapDispatch)(withStyles(useStyles)(NoteList));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Box, Checkbox, createStyles, FormControlLabel, IconButton, makeStyles, TextField, Theme } from '@material-ui/core';\nimport { Add, Check, Close, Delete, Edit, Favorite, FavoriteBorder } from '@material-ui/icons';\n\nimport notesReducer from '../../store/reducers/notesReducer';\nimport { changeBullet, removeBullet } from '../../store/actions/notesActions';\nimport { IBullet, INotesStore } from '../../types';\n\ninterface BulletProps {\n  list: string[],\n  curBullet?: IBullet,\n  notes: INotesStore,\n  changeBullet: Function,\n  removeBullet: Function,\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonActions: {\n      width: theme.spacing(4),\n    },\n  }),\n);\n\nfunction Bullet({ list, curBullet, notes, changeBullet, removeBullet }: BulletProps) {\n  const classes = useStyles();\n  const [isEditBullet, setEdit] = React.useState('');\n  const [bulletName, setBulletName] = React.useState('');\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>, bullet: IBullet) {\n    changeBullet({ ...bullet, isChecked: event.target.checked });\n  }\n\n  function saveChangedBullet(bullet: IBullet) {\n    changeBullet({ ...bullet, label: bulletName });\n    setEdit('');\n    setBulletName('');\n  }\n\n  function addBullet(bullet?: IBullet) {\n    console.log('>>>>>>>>>> ', bullet)\n  }\n\n  function actionButtons(bullet: IBullet) {\n    if (!isEditBullet || isEditBullet !== bullet.id) {\n      return (\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"cener\">\n          <IconButton\n            className={classes.buttonActions}\n            size=\"small\"\n            component=\"span\"\n            onClick={() => { setBulletName(bullet.label); setEdit(bullet.id) }}\n          >\n            <Edit fontSize=\"small\" />\n          </IconButton>\n          <IconButton\n            className={classes.buttonActions}\n            size=\"small\"\n            component=\"span\"\n            onClick={() => removeBullet(bullet)}\n          >\n            <Delete fontSize=\"small\" />\n          </IconButton>\n          <IconButton\n            className={classes.buttonActions}\n            size=\"small\"\n            component=\"span\"\n            onClick={() => addBullet(bullet)}\n          >\n            <Add fontSize=\"small\" />\n          </IconButton>\n        </Box>\n      );\n    } else {\n      return (\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"cener\">\n          <IconButton\n            className={classes.buttonActions}\n            size=\"small\"\n            component=\"span\"\n            onClick={() => saveChangedBullet(bullet)}\n          >\n            <Check fontSize=\"small\" />\n          </IconButton>\n          <IconButton\n            className={classes.buttonActions}\n            size=\"small\"\n            component=\"span\"\n            onClick={() => { setBulletName(''); setEdit('') }}\n          >\n            <Close fontSize=\"small\" />\n          </IconButton>\n        </Box>\n      );\n    }\n  }\n\n  function getBulletLabel(bullet: IBullet) {\n    if (isEditBullet && isEditBullet === bullet.id) {\n      return (\n        <TextField value={bulletName} onChange={(event) => setBulletName(event.target.value)} />\n      )\n    } else {\n      return bullet.label\n    }\n  }\n\n  function renderCheckBox(bullet: IBullet) {\n    return (\n      <Box display=\"flex\" flexDirection=\"row\">\n        <FormControlLabel\n          key={'form-control-label-' + bullet.id}\n          control={\n            <Checkbox\n              icon={<FavoriteBorder />}\n              checkedIcon={<Favorite />}\n              checked={bullet.isChecked}\n              onChange={(event) => handleChange(event, bullet)}\n              name=\"checkedH\"\n            />\n          }\n          label={getBulletLabel(bullet)}\n        />\n        {actionButtons(bullet)}\n      </Box>\n    );\n  }\n\n  function renderBullets(id: string) {\n    const bullet = notes.currentNote ? notes.currentNote[id] : {} as IBullet;\n\n    if (bullet) {\n      if (bullet.bullets) {\n        return (\n          [\n            renderCheckBox(bullet),\n            <Bullet\n              key={'form-control-label-' + id}\n              list={bullet.bullets}\n              notes={notes}\n              curBullet={bullet}\n              changeBullet={changeBullet}\n              removeBullet={removeBullet}\n            />\n          ]\n        )\n      } else {\n        return (renderCheckBox(bullet));\n      }\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" flexWrap=\"wrap\" pl={2}>\n      {list.map(renderBullets)}\n      {/* {\n        list.length ?\n          <IconButton\n            className={classes.buttonActions}\n            size=\"small\"\n            component=\"span\"\n            onClick={() => addBullet(curBullet)}\n          >\n            <Add fontSize=\"small\" />\n          </IconButton> : null\n      } */}\n    </Box>\n  )\n}\n\nconst mapState = notesReducer;\n\nconst mapDispatch = {\n  changeBullet: changeBullet,\n  removeBullet: removeBullet,\n}\n\nexport default connect(mapState, mapDispatch)(Bullet);\n","import React, { Component } from 'react';\nimport { Box, IconButton, Theme, withStyles } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { INotesStore, StylesDictionary } from '../../types';\nimport { cleanParticularNote, getParticularNote, saveNote } from '../../store/actions/notesActions';\nimport notesReducer from '../../store/reducers/notesReducer';\nimport Bullets from './Bullet';\nimport { ArrowBack, Save } from '@material-ui/icons';\n\nconst useStyles = (theme: Theme): StylesDictionary => ({\n  root: {\n    textAlign: 'left',\n  },\n});\n\ninterface NoteProps {\n  classes: Record<string, string>,\n  match: any,\n  notes: INotesStore,\n  history: any,\n  getNote: Function,\n  cleanNote: Function,\n  saveNote: Function,\n}\n\ninterface NoteState { }\n\nclass Note extends Component<NoteProps, NoteState> {\n\n  constructor(props: NoteProps) {\n    super(props);\n    this.props.getNote(props.match.params.id);\n  }\n\n  goBack() {\n    this.props.cleanNote();\n    this.props.history.push('/kids-games/notes');\n  }\n\n  render() {\n    const { classes, notes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Box display=\"flex\" flexDirection=\"row\" >\n          <IconButton\n            className={classes.buttonActions}\n            size=\"small\"\n            component=\"span\"\n            onClick={() => this.goBack()}\n          >\n            <ArrowBack fontSize=\"small\" />\n          </IconButton>\n          <IconButton\n            className={classes.buttonActions}\n            size=\"small\"\n            component=\"span\"\n            onClick={() => this.props.saveNote({ note: notes.currentNote, curHighLevelBullets: notes.curHighLevelBullets })}\n          >\n            <Save fontSize=\"small\" />\n          </IconButton>\n        </Box>\n        { notes.curHighLevelBullets && notes.currentNote ? <Bullets list={notes.curHighLevelBullets} /> : 'Note is empty'}\n      </div>\n    );\n  }\n}\n\nconst mapState = notesReducer;\n\nconst mapDispatch = {\n  getNote: getParticularNote,\n  cleanNote: cleanParticularNote,\n  saveNote: saveNote,\n}\n\nexport default connect(mapState, mapDispatch)(withStyles(useStyles)(Note));","import React from 'react';\nimport './App.css';\nimport LoginForm from './components/auth/LoginForm';\nimport {\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport NoteList from './components/notes/NoteList';\nimport Note from './components/notes/Note';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Congratulations! Your App is live. Start working.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      </header>\n      <div>\n        <Switch>\n          <Route path=\"/kids-games/login\">\n            <LoginForm />\n          </Route>\n          <Route path=\"/kids-games/notes\">\n            <NoteList />\n          </Route>\n          <Route path=\"/kids-games/note/:id\" component={Note} />\n          <Route path=\"/\">\n            <Redirect push to=\"/login\" />\n          </Route>\n        </Switch>\n      </div>\n      <footer></footer>\n    </div>\n  );\n}\n\nexport default App;\n","\nimport red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;","import { combineReducers } from 'redux';\nimport auth from './authReducer';\nimport notes from './notesReducer';\n\nexport default combineReducers({\n  auth,\n  notes,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(logger),\n  // other store enhancers if any\n));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n      <Router>\n        <App />\n      </Router>\n  </ThemeProvider>\n  </Provider>,\n  document.querySelector('#root'),\n);\n\n"],"sourceRoot":""}